/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vistas.secundarias;

import controladores.ControladorCliente;
import controladores.ControladorProducto;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.function.Predicate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import modelos.*;
import utilidades.Validacion;
import vistas.modales.ModalCliente;

/**
 * @author kei40
 */
public class VistaVenta extends javax.swing.JDialog {

    DefaultTableModel modelo1;
    DefaultTableModel modelo2;
    List<Producto> productos = new ArrayList<>();
    List<Carrito> carrito = new ArrayList<>();

    public static Optional<Cliente> isSelectedCliente = Optional.empty();

    /**
     * Creates new form VistaUsuario
     */
    public VistaVenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.modelo1 = (DefaultTableModel) dataProductos1.getModel();
        this.modelo2 = (DefaultTableModel) dataProductos2.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnSeleccionarCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtBuscarProductos2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataProductos2 = new javax.swing.JTable();
        btnRetirar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtBuscarProductos1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        dataProductos1 = new javax.swing.JTable();
        btnAgregar1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblNumeroProductos = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel1.setText("Cliente");

        txtCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtCliente.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCliente.setEnabled(false);

        btnSeleccionarCliente.setBackground(new java.awt.Color(0, 153, 51));
        btnSeleccionarCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnSeleccionarCliente.setText("Seleccione");
        btnSeleccionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(txtCliente)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionarCliente)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeleccionarCliente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        btnRegistrar.setBackground(new java.awt.Color(0, 153, 51));
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");

        btnCerrar.setBackground(new java.awt.Color(204, 0, 0));
        btnCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(0, 153, 204));
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegistrar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnCerrar)
                    .addComponent(btnLimpiar))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel6.setText("Buscar");

        txtBuscarProductos2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProductos2KeyReleased(evt);
            }
        });

        dataProductos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CÃ³digo", "Producto", "Precio", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(dataProductos2);

        btnRetirar.setBackground(new java.awt.Color(204, 0, 0));
        btnRetirar.setForeground(new java.awt.Color(255, 255, 255));
        btnRetirar.setText("Retirar");
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarProductos2))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRetirar)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscarProductos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRetirar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel7.setText("Buscar");

        txtBuscarProductos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProductos1KeyReleased(evt);
            }
        });

        dataProductos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CÃ³digo", "Producto", "Precio", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(dataProductos1);

        btnAgregar1.setBackground(new java.awt.Color(0, 153, 51));
        btnAgregar1.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar1.setText("Agregar");
        btnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarProductos1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBuscarProductos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar1)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Resumen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel2.setText(": # Productos");

        jLabel4.setText(": Total");

        lblNumeroProductos.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblNumeroProductos)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblNumeroProductos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblTotal)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        VistaVenta.isSelectedCliente = Optional.empty();
        VistaVenta.txtCliente.setText("");
        this.txtCantidad.setText("");
        this.carrito.clear();
        this.lblNumeroProductos.setText("");
        this.lblTotal.setText("");
        
        this.modelo1.setRowCount(0);
        productos.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });
        
        this.modelo2.setRowCount(0);
        carrito.forEach(e -> {
            this.modelo2.addRow(new String[]{String.valueOf(e.getProducto().getId()),
                    e.getProducto().getNombreProducto(),
                    String.valueOf(e.getProducto().getPrecio()),
                    String.valueOf(e.getCantidad()),
                    String.valueOf(e.getTotal())});
        });
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSeleccionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarClienteActionPerformed
        ControladorCliente controlador = new ControladorCliente(
                new ModalCliente((Frame) this.getParent(), true));
    }//GEN-LAST:event_btnSeleccionarClienteActionPerformed

    private void txtBuscarProductos2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductos2KeyReleased
        String buscar = String.valueOf(this.txtBuscarProductos2.getText());

        Predicate<Carrito> porNombre = e -> e.getProducto().getNombreProducto()
                .toLowerCase()
                .contains(buscar.toLowerCase());

        List<Carrito> filtrados = this.carrito.stream()
                .filter(porNombre)
                .toList();

        this.modelo2.setRowCount(0);
        filtrados.forEach(e -> {
            this.modelo2.addRow(new String[]{String.valueOf(e.getProducto().getId()),
                    e.getProducto().getNombreProducto(),
                    String.valueOf(e.getProducto().getPrecio()),
                    String.valueOf(e.getCantidad()),
                    String.valueOf(e.getTotal())});
        });
    }//GEN-LAST:event_txtBuscarProductos2KeyReleased

    private void txtBuscarProductos1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProductos1KeyReleased
        String buscar = String.valueOf(this.txtBuscarProductos1.getText());

        Predicate<Producto> porNombre = e -> e.getNombreProducto()
                .toLowerCase()
                .contains(buscar.toLowerCase());

        List<Producto> filtrados = this.productos.stream()
                .filter(porNombre)
                .toList();

        this.modelo1.setRowCount(0);
        filtrados.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });
    }//GEN-LAST:event_txtBuscarProductos1KeyReleased

    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
        int index = this.dataProductos2.getSelectedRow();

        if (!dataProductos2.isRowSelected(index)) {
            JOptionPane.showMessageDialog(null, "Seleccione un producto...!");
            return;
        }

        Long idProducto = Long.valueOf((String) dataProductos1.getModel().getValueAt(index, 0));

        Optional<Carrito> existe = this.carrito.stream()
                .filter(e -> e.getProducto().getId().equals(idProducto))
                .findFirst();

        if (existe.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El producto no existe...!");
            return;
        }

        Optional<Producto> existeProducto = this.productos.stream()
                .filter(e -> e.getId().equals(idProducto))
                .findFirst();

        if (existeProducto.isPresent()) {
            existeProducto.get().setStock(existeProducto.get().getStock() + existe.get().getCantidad());
        }

        this.carrito.remove(existe.get());

        lblNumeroProductos.setText(String.valueOf(this.carrito.size()));
        lblTotal.setText(String.valueOf(this.carrito.stream().mapToDouble(Carrito::getTotal).sum()));

        this.modelo1.setRowCount(0);
        productos.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });

        this.modelo2.setRowCount(0);
        carrito.forEach(e -> {
            this.modelo2.addRow(new String[]{String.valueOf(e.getProducto().getId()),
                    e.getProducto().getNombreProducto(),
                    String.valueOf(e.getProducto().getPrecio()),
                    String.valueOf(e.getCantidad()),
                    String.valueOf(e.getTotal())});
        });
    }//GEN-LAST:event_btnRetirarActionPerformed

    private void btnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar1ActionPerformed
        int index = this.dataProductos1.getSelectedRow();

        if (!dataProductos1.isRowSelected(index)) {
            JOptionPane.showMessageDialog(null, "Seleccione un producto...!");
            return;
        }

        Long idProducto = Long.valueOf((String) dataProductos1.getModel().getValueAt(index, 0));

        Optional<Producto> existe = this.productos.stream()
                .filter(e -> e.getId().equals(idProducto))
                .findFirst();

        if (existe.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El producto no existe...!");
            return;
        }

        String cantidad = this.txtCantidad.getText();

        if (!Validacion.validarVacios(cantidad)) {
            JOptionPane.showMessageDialog(this, "Ingrese la cantidad...!");
            return;
        }

        if (!Validacion.validarMayorACero(Integer.valueOf(cantidad))) {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida...!");
            return;
        }

        if (Integer.valueOf(cantidad) > existe.get().getStock()) {
            JOptionPane.showMessageDialog(this, "No hay suficiente stock...!");
            return;
        }

        Optional<Carrito> existeCarrito = this.carrito.stream()
                .filter(e -> e.getProducto().getId().equals(idProducto))
                .findFirst();

        if (existeCarrito.isPresent()) {
            existeCarrito.get().setCantidad(existeCarrito.get().getCantidad() + Integer.valueOf(cantidad));
            existeCarrito.get().setTotal(existeCarrito.get().getProducto().getPrecio() * existeCarrito.get().getCantidad());
        } else {
            Carrito add = Carrito.builder()
                    .producto(existe.get())
                    .cantidad(Integer.valueOf(cantidad))
                    .total(existe.get().getPrecio() * Integer.valueOf(cantidad))
                    .build();

            carrito.add(add);
        }

        existe.get().setStock(existe.get().getStock() - Integer.valueOf(cantidad));

        this.modelo1.setRowCount(0);
        productos.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });

        lblNumeroProductos.setText(String.valueOf(this.carrito.size()));
        lblTotal.setText(String.valueOf(this.carrito.stream().mapToDouble(Carrito::getTotal).sum()));
        this.txtCantidad.setText("");

        this.modelo2.setRowCount(0);
        carrito.forEach(e -> {
            this.modelo2.addRow(new String[]{String.valueOf(e.getProducto().getId()),
                    e.getProducto().getNombreProducto(),
                    String.valueOf(e.getProducto().getPrecio()),
                    String.valueOf(e.getCantidad()),
                    String.valueOf(e.getTotal())});
        });
    }//GEN-LAST:event_btnAgregar1ActionPerformed

    public void pintar(List<Producto> registros) {
        this.productos = registros;
        this.modelo1.setRowCount(0);
        registros.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });
    }

    public Optional<Venta> agregar() {
        if (!VistaVenta.isSelectedCliente.isPresent()) {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente...!");
            return Optional.empty();
        }

        int cantidad = this.carrito.size();

        if (cantidad == 0) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningun producto...!");
            return Optional.empty();
        }

        List<DetalleVenta> detalles = this.carrito.stream()
                .map(e -> DetalleVenta.builder()
                        .producto(e.getProducto())
                        .cantidad(e.getCantidad())
                        .precioUnitario(e.getProducto().getPrecio())
                        .subTotal(e.getTotal())
                        .build())
                .toList();

        Venta venta = Venta.builder()
                .cliente(VistaVenta.isSelectedCliente.get())
                 .detalleVenta(detalles)
                .total(this.carrito.stream().mapToDouble(Carrito::getTotal).sum())
                .build();
        
        this.carrito.clear();
        
        lblNumeroProductos.setText("");
        lblTotal.setText("");
        
        ControladorProducto controladorProducto = new ControladorProducto();
        
        this.productos.clear();
        this.productos.addAll(controladorProducto.registros());
        
        this.modelo1.setRowCount(0);
        productos.forEach(e -> {
            this.modelo1.addRow(new String[]{String.valueOf(e.getId()),
                    e.getNombreProducto(),
                    String.valueOf(e.getPrecio()),
                    String.valueOf(e.getStock())});
        });
        
        this.carrito.clear();
        
        this.modelo2.setRowCount(0);
        carrito.forEach(e -> {
            this.modelo2.addRow(new String[]{String.valueOf(e.getProducto().getId()),
                    e.getProducto().getNombreProducto(),
                    String.valueOf(e.getProducto().getPrecio()),
                    String.valueOf(e.getCantidad()),
                    String.valueOf(e.getTotal())});
        });
        
        this.pintar(productos);

        return Optional.ofNullable(venta);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAgregar1;
    public javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnLimpiar;
    public javax.swing.JButton btnRegistrar;
    public javax.swing.JButton btnRetirar;
    private javax.swing.JButton btnSeleccionarCliente;
    private javax.swing.JTable dataProductos1;
    private javax.swing.JTable dataProductos2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNumeroProductos;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtBuscarProductos1;
    private javax.swing.JTextField txtBuscarProductos2;
    private javax.swing.JTextField txtCantidad;
    public static javax.swing.JTextField txtCliente;
    // End of variables declaration//GEN-END:variables
}
